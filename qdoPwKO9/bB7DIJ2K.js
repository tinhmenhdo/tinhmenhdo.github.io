import{g as getImage}from"./r4CvMzeW.js";const load=async()=>{let s;try{s=Object.assign({"/src/assets/images/144x114.png":()=>import("./DVbbE5jH.js"),"/src/assets/images/192x192.png":()=>import("./O4RLh48d.js"),"/src/assets/images/196x196.png":()=>import("./Dpwo0NFO.js"),"/src/assets/images/72x72.png":()=>import("./R-T-V_Gh.js"),"/src/assets/images/TinhMenhDo-GPT.png":()=>import("./C1C4r5FL.js"),"/src/assets/images/YinYang.webp":()=>import("./BQg7o0kV.js"),"/src/assets/images/am-duong.png":()=>import("./BJWf-V6O.js"),"/src/assets/images/app-store.png":()=>import("./BL0Zta1T.js"),"/src/assets/images/architecture.png":()=>import("./DgGGrxXO.js"),"/src/assets/images/arrows.png":()=>import("./CdEeT_8f.js"),"/src/assets/images/bg.jpg":()=>import("./DLWIar1S.js"),"/src/assets/images/birthday-cake.png":()=>import("./6OCjF6Yp.js"),"/src/assets/images/brain.png":()=>import("./YjSx2vwa.js"),"/src/assets/images/calendar.png":()=>import("./DeZrtZFN.js"),"/src/assets/images/curve-arrow.png":()=>import("./DY0f7JOJ.js"),"/src/assets/images/default.png":()=>import("./c9ozYVYg.js"),"/src/assets/images/default.webp":()=>import("./CK-gJHiM.js"),"/src/assets/images/diaban.png":()=>import("./BAJFWUI4.js"),"/src/assets/images/earth.png":()=>import("./sFj8hevX.js"),"/src/assets/images/fav.png":()=>import("./CXM7UjD5.js"),"/src/assets/images/google-play.png":()=>import("./D8kz0cEH.js"),"/src/assets/images/hero-image.png":()=>import("./CWFwcweF.js"),"/src/assets/images/icon.png":()=>import("./Ee0R7w1S.js"),"/src/assets/images/logo.png":()=>import("./W8SkMQXQ.js"),"/src/assets/images/man.png":()=>import("./DX8z26OE.js"),"/src/assets/images/scale.png":()=>import("./BQwi3Kiq.js"),"/src/assets/images/star.png":()=>import("./BKWinKBW.js"),"/src/assets/images/universe.png":()=>import("./DyL3tqlU.js"),"/src/assets/images/view.png":()=>import("./BDzyM_vq.js"),"/src/assets/images/woman.png":()=>import("./BFtG4C6U.js"),"/src/assets/images/yinyang.png":()=>import("./C26r6mzG.js"),"/src/assets/images/yinyang2.webp":()=>import("./CeGUaraS.js")})}catch(s){}return s};let _images;const fetchLocalImages=async()=>(_images=_images||await load(),_images),findImage=async s=>{if("string"!=typeof s)return s;if(s.startsWith("http://")||s.startsWith("https://")||s.startsWith("/"))return s;if(!s.startsWith("~/assets/images"))return s;const a=await fetchLocalImages(),e=s.replace("~/","/src/");return a&&"function"==typeof a[e]?(await a[e]()).default:null},adaptOpenGraphImages=async(s={},a=new URL(""))=>{if(!s?.images?.length)return s;const e=s.images,t=await Promise.all(e.map((async s=>{if(s?.url){const a=await findImage(s.url);if(!a)return{url:""};const e=await getImage({src:a,alt:"Placeholder alt",width:s?.width||1200,height:s?.height||626});return"object"==typeof e?{url:"src"in e&&"string"==typeof e.src?e.src:"pepe",width:"width"in e&&"number"==typeof e.width?e.width:void 0,height:"height"in e&&"number"==typeof e.height?e.height:void 0}:{url:""}}return{url:""}})));return{...s,...t?{images:t}:{}}};export{adaptOpenGraphImages as a,findImage as f};