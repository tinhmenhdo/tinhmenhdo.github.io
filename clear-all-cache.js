!async function(){if(console.log("🚨 EMERGENCY SERVICE WORKER CLEANER STARTED"),"function"==typeof window.emergencySwCleanup)return console.log("🔧 Using integrated service worker killer..."),void await window.emergencySwCleanup();console.log("🔧 Using fallback service worker cleanup...");try{if("serviceWorker"in navigator){const e=await navigator.serviceWorker.getRegistrations();for(const o of e)await o.unregister(),console.log("💀 Service worker unregistered:",o.scope);e.length>0?console.log(`✅ Unregistered ${e.length} service worker(s)`):console.log("ℹ️ No service workers found")}if("caches"in window){const e=await caches.keys();for(const o of e)await caches.delete(o),console.log("💀 Cache deleted:",o);e.length>0?console.log(`✅ Deleted ${e.length} cache(s)`):console.log("ℹ️ No caches found")}const e=[];for(let o=0;o<localStorage.length;o++){const n=localStorage.key(o);n&&(n.includes("sw-")||n.includes("service-worker")||n.includes("workbox")||n.includes("pwa"))&&e.push(n)}if(e.forEach((e=>{localStorage.removeItem(e),console.log("💀 SW localStorage key removed:",e)})),e.length>0&&console.log(`✅ Removed ${e.length} service worker localStorage key(s)`),sessionStorage.clear(),console.log("💀 sessionStorage cleared"),"indexedDB"in window)try{const e=await indexedDB.databases();for(const o of e)o.name&&(indexedDB.deleteDatabase(o.name),console.log("💀 IndexedDB deleted:",o.name));e.length>0&&console.log(`✅ Deleted ${e.length} IndexedDB database(s)`)}catch(e){console.log("💀 IndexedDB cleared (if any)")}console.log("✅ EMERGENCY SERVICE WORKER CLEANER COMPLETED"),console.log("🔄 Page will refresh in 2 seconds to ensure clean state"),setTimeout((()=>{console.log("🔄 Auto refreshing..."),window.location.reload()}),2e3)}catch(e){console.error("❌ Error during service worker cleanup:",e)}}();