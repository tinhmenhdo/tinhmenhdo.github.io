import{g as getImage}from"./C3DMYURZ.js";import{parseUrl,transformUrl}from"unpic";const config={deviceSizes:[640,750,828,960,1080,1280,1668,1920,2048,2560,3200,3840,4480,5120,6016]},computeHeight=(s,t)=>Math.floor(s/t),parseAspectRatio=s=>{if("number"==typeof s)return s;if("string"==typeof s){const t=s.match(/(\d+)\s*[/:]\s*(\d+)/);if(t){const[,s,e]=t.map(Number);if(e&&!isNaN(s))return s/e}else{const t=parseFloat(s);if(!isNaN(t))return t}}},getSizes=(s,t)=>{if(s&&t)switch(t){case"constrained":return`(min-width: ${s}px) ${s}px, 100vw`;case"fixed":return`${s}px`;case"fullWidth":return"100vw";default:return}},pixelate=s=>s||0===s?`${s}px`:void 0,getStyle=({width:s,height:t,aspectRatio:e,layout:i,objectFit:r="cover",objectPosition:a="center",background:o})=>{const p=[["object-fit",r],["object-position",a]];o?.startsWith("https:")||o?.startsWith("http:")||o?.startsWith("data:")?(p.push(["background-image",`url(${o})`]),p.push(["background-size","cover"]),p.push(["background-repeat","no-repeat"])):p.push(["background",o]),"fixed"===i&&(p.push(["width",pixelate(s)]),p.push(["height",pixelate(t)]),p.push(["object-position","top left"])),"constrained"===i&&(p.push(["max-width",pixelate(s)]),p.push(["max-height",pixelate(t)]),p.push(["aspect-ratio",e?`${e}`:void 0]),p.push(["width","100%"])),"fullWidth"===i&&(p.push(["width","100%"]),p.push(["aspect-ratio",e?`${e}`:void 0]),p.push(["height",pixelate(t)])),"responsive"===i&&(p.push(["width","100%"]),p.push(["height","auto"]),p.push(["aspect-ratio",e?`${e}`:void 0])),"contained"===i&&(p.push(["max-width","100%"]),p.push(["max-height","100%"]),p.push(["object-fit","contain"]),p.push(["aspect-ratio",e?`${e}`:void 0])),"cover"===i&&(p.push(["max-width","100%"]),p.push(["max-height","100%"]));const n=Object.fromEntries(p.filter((([,s])=>s)));return Object.entries(n).map((([s,t])=>`${s}: ${t};`)).join(" ")},getBreakpoints=({width:s,breakpoints:t,layout:e})=>{if("fullWidth"===e||"cover"===e||"responsive"===e||"contained"===e)return t||config.deviceSizes;if(!s)return[];const i=2*s;return"fixed"===e?[s,i]:"constrained"===e?[s,i,...(t||config.deviceSizes).filter((s=>s<i))]:[]},astroAssetsOptimizer=async(s,t,e,i,r=void 0)=>s?Promise.all(t.map((async t=>{const e=await getImage({src:s,width:t,inferSize:!0,...r?{format:r}:{}});return{src:e?.src,width:e?.attributes?.width??t,height:e?.attributes?.height}}))):[],isUnpicCompatible=s=>void 0!==parseUrl(s),unpicOptimizer=async(s,t,e,i,r=void 0)=>{if(!s||"string"!=typeof s)return[];const a=parseUrl(s);return a?Promise.all(t.map((async t=>{const o=e&&i?computeHeight(t,e/i):i,p=transformUrl({url:s,width:t,height:o,cdn:a.cdn,...r?{format:r}:{}})||s;return{src:String(p),width:t,height:o}}))):[]};async function getImagesOptimized(s,{src:t,width:e,height:i,sizes:r,aspectRatio:a,objectPosition:o,widths:p,layout:n="constrained",style:c="",format:g,...m},h=()=>Promise.resolve([])){"string"!=typeof s&&(e||=Number(s.width)||void 0,i||="number"==typeof e?computeHeight(e,s.width/s.height):void 0),e=e&&Number(e)||void 0,i=i&&Number(i)||void 0,p||=config.deviceSizes,r||=getSizes(Number(e)||void 0,n),(a=parseAspectRatio(a))?e?i||(i=e/a):i?e=Number(i*a):"fullWidth"!==n&&(console.error("When aspectRatio is set, either width or height must also be set"),console.error("Image",s)):e&&i?a=e/i:"fullWidth"!==n&&(console.error("Either aspectRatio or both width and height must be set"),console.error("Image",s));let u=getBreakpoints({width:e,breakpoints:p,layout:n});u=[...new Set(u)].sort(((s,t)=>s-t));const d=(await h(s,u,Number(e)||void 0,Number(i)||void 0,g)).map((({src:s,width:t})=>`${s} ${t}w`)).join(", ");return{src:"string"==typeof s?s:s.src,attributes:{width:e,height:i,srcset:d||void 0,sizes:r,style:`${getStyle({width:e,height:i,aspectRatio:a,objectPosition:o,layout:n})}${c??""}`,...m}}}const load=async function(){let s;try{s=Object.assign({"/src/assets/images/144x114.png":()=>import("./DgsFmnof.js"),"/src/assets/images/192x192.png":()=>import("./BmNqFRmh.js"),"/src/assets/images/196x196.png":()=>import("./CqdhMt6R.js"),"/src/assets/images/72x72.png":()=>import("./0Kav0zMz.js"),"/src/assets/images/TinhMenhDoLogo.webp":()=>import("./Cb86hwTM.js"),"/src/assets/images/YinYang.webp":()=>import("./C1hodu6f.js"),"/src/assets/images/am-duong.png":()=>import("./D4wPjI7r.js"),"/src/assets/images/app-store.png":()=>import("./SBgTewRP.js"),"/src/assets/images/architecture.png":()=>import("./CzJWQbku.js"),"/src/assets/images/arrows.png":()=>import("./BI3cqrdb.js"),"/src/assets/images/bg.jpg":()=>import("./aVkDj8v6.js"),"/src/assets/images/birthday-cake.png":()=>import("./DHQ5Gjfe.js"),"/src/assets/images/brain.png":()=>import("./ZSlZ5CbK.js"),"/src/assets/images/calendar.png":()=>import("./BTuUb74B.js"),"/src/assets/images/curve-arrow.png":()=>import("./CJlk85g1.js"),"/src/assets/images/default.png":()=>import("./BEYzXJCj.js"),"/src/assets/images/default.webp":()=>import("./KQMgJlkK.js"),"/src/assets/images/diaban.png":()=>import("./BEsqtrUo.js"),"/src/assets/images/earth.png":()=>import("./D3LchadF.js"),"/src/assets/images/fav.png":()=>import("./BuEZU2Vo.js"),"/src/assets/images/google-play.png":()=>import("./A-5FpT46.js"),"/src/assets/images/hero-image.png":()=>import("./BZYNfmg8.js"),"/src/assets/images/icon.png":()=>import("./oclOCj_-.js"),"/src/assets/images/logo.png":()=>import("./Db-YEDCp.js"),"/src/assets/images/man.png":()=>import("./Bn9r19yQ.js"),"/src/assets/images/pattern_optimize.jpg":()=>import("./BSSLWWEU.js").then((s=>s.p)),"/src/assets/images/scale.png":()=>import("./9ZYcqj5c.js"),"/src/assets/images/star.png":()=>import("./BEdQ5Euo.js"),"/src/assets/images/tinh-menh-do-gpt.jpg":()=>import("./BOJ2VXmo.js"),"/src/assets/images/universe.png":()=>import("./C5gf0vei.js"),"/src/assets/images/view.png":()=>import("./B-3eN5PD.js"),"/src/assets/images/woman.png":()=>import("./CF0FhYXn.js"),"/src/assets/images/yinyang.png":()=>import("./DLB3cuU9.js"),"/src/assets/images/yinyang2.webp":()=>import("./v8h9yoQH.js")})}catch(s){}return s};let _images;const fetchLocalImages=async()=>(_images=_images||await load(),_images),findImage=async s=>{if("string"!=typeof s)return s;if(s.startsWith("http://")||s.startsWith("https://")||s.startsWith("/"))return s;if(!s.startsWith("~/assets/images"))return s;const t=await fetchLocalImages(),e=s.replace("~/","/src/");return t&&"function"==typeof t[e]?(await t[e]()).default:null},adaptOpenGraphImages=async(s={},t=new URL(""))=>{if(!s?.images?.length)return s;const e=s.images,i=1200,r=await Promise.all(e.map((async s=>{if(s?.url){const e=await findImage(s.url);if(!e)return{url:""};let r;if("string"==typeof e&&(e.startsWith("http://")||e.startsWith("https://"))&&isUnpicCompatible(e))r=(await unpicOptimizer(e,[i],i,626,"jpg"))[0];else if(e){const s="string"!=typeof e&&e?.width<=i?[e?.width,e?.height]:[i,626];r=(await astroAssetsOptimizer(e,[s[0]],s[0],s[1],"jpg"))[0]}return"object"==typeof r?{url:"src"in r&&"string"==typeof r.src?String(new URL(r.src,t)):"",width:"width"in r&&"number"==typeof r.width?r.width:void 0,height:"height"in r&&"number"==typeof r.height?r.height:void 0}:{url:""}}return{url:""}})));return{...s,...r?{images:r}:{}}};export{astroAssetsOptimizer as a,adaptOpenGraphImages as b,findImage as f,getImagesOptimized as g,isUnpicCompatible as i,unpicOptimizer as u};