const t=Math.PI,i=2*t,h=1e-6,s=i-h;function n(t){this._+=t[0];for(let i=1,h=t.length;i<h;++i)this._+=arguments[i]+t[i]}class Path{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==t?n:function(t){let i=Math.floor(t);if(!(i>=0))throw new Error(`invalid digits: ${t}`);if(i>15)return n;const h=10**i;return function(t){this._+=t[0];for(let i=1,s=t.length;i<s;++i)this._+=Math.round(arguments[i]*h)/h+t[i]}}(t)}moveTo(t,i){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,i){this._append`L${this._x1=+t},${this._y1=+i}`}quadraticCurveTo(t,i,h,s){this._append`Q${+t},${+i},${this._x1=+h},${this._y1=+s}`}bezierCurveTo(t,i,h,s,n,_){this._append`C${+t},${+i},${+h},${+s},${this._x1=+n},${this._y1=+_}`}arcTo(i,s,n,_,e){if(i=+i,s=+s,n=+n,_=+_,(e=+e)<0)throw new Error(`negative radius: ${e}`);let a=this._x1,$=this._y1,r=n-i,o=_-s,l=a-i,p=$-s,u=l*l+p*p;if(null===this._x1)this._append`M${this._x1=i},${this._y1=s}`;else if(u>h)if(Math.abs(p*r-o*l)>h&&e){let d=n-a,c=_-$,x=r*r+o*o,f=d*d+c*c,M=Math.sqrt(x),y=Math.sqrt(u),g=e*Math.tan((t-Math.acos((x+u-f)/(2*M*y)))/2),w=g/y,v=g/M;Math.abs(w-1)>h&&this._append`L${i+w*l},${s+w*p}`,this._append`A${e},${e},0,0,${+(p*d>l*c)},${this._x1=i+v*r},${this._y1=s+v*o}`}else this._append`L${this._x1=i},${this._y1=s}`}arc(n,_,e,a,$,r){if(n=+n,_=+_,r=!!r,(e=+e)<0)throw new Error(`negative radius: ${e}`);let o=e*Math.cos(a),l=e*Math.sin(a),p=n+o,u=_+l,d=1^r,c=r?a-$:$-a;null===this._x1?this._append`M${p},${u}`:(Math.abs(this._x1-p)>h||Math.abs(this._y1-u)>h)&&this._append`L${p},${u}`,e&&(c<0&&(c=c%i+i),c>s?this._append`A${e},${e},0,1,${d},${n-o},${_-l}A${e},${e},0,1,${d},${this._x1=p},${this._y1=u}`:c>h&&this._append`A${e},${e},0,${+(c>=t)},${d},${this._x1=n+e*Math.cos($)},${this._y1=_+e*Math.sin($)}`)}rect(t,i,h,s){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}h${h=+h}v${+s}h${-h}Z`}toString(){return this._}}function _(t){return function(){return t}}function e(t){let i=3;return t.digits=function(h){if(!arguments.length)return i;if(null==h)i=null;else{const t=Math.floor(h);if(!(t>=0))throw new RangeError(`invalid digits: ${h}`);i=t}return t},()=>new Path(i)}export{_ as c,e as w};