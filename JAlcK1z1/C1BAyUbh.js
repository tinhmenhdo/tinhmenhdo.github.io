import{d as createAstro,c as createComponent,r as renderTemplate,a as renderComponent,m as maybeRenderHead,b as addAttribute,s as spreadAttributes,F as Fragment}from"./UJWqr72G.js";import{f as findImage}from"./8B8wmOTe.js";import{g as getImage}from"./s9VTTYDj.js";import{parseUrl,transformUrl}from"unpic";const config={imageSizes:[16,32,48,64,96,128,256,384],deviceSizes:[640,750,828,960,1080,1280,1668,1920,2048,2560,3200,3840,4480,5120,6016],formats:["image/webp"]},computeHeight=(t,e)=>Math.floor(t/e),parseAspectRatio=t=>{if("number"==typeof t)return t;if("string"==typeof t){const e=t.match(/(\d+)\s*[/:]\s*(\d+)/);if(e){const[,t,i]=e.map(Number);if(i&&!isNaN(t))return t/i}else{const e=parseFloat(t);if(!isNaN(e))return e}}},getSizes=(t,e)=>{if(t&&e)switch(e){case"constrained":return`(min-width: ${t}px) ${t}px, 100vw`;case"fixed":return`${t}px`;case"fullWidth":return"100vw";default:return}},pixelate=t=>t||0===t?`${t}px`:void 0,getStyle=({width:t,height:e,aspectRatio:i,layout:r,objectFit:s="cover",objectPosition:o="center",background:a})=>{const n=[["object-fit",s],["object-position",o]];a?.startsWith("https:")||a?.startsWith("http:")||a?.startsWith("data:")?(n.push(["background-image",`url(${a})`]),n.push(["background-size","cover"]),n.push(["background-repeat","no-repeat"])):n.push(["background",a]),"fixed"===r&&(n.push(["width",pixelate(t)]),n.push(["height",pixelate(e)]),n.push(["object-position","top left"])),"constrained"===r&&(n.push(["max-width",pixelate(t)]),n.push(["max-height",pixelate(e)]),n.push(["aspect-ratio",i?`${i}`:void 0]),n.push(["width","100%"])),"fullWidth"===r&&(n.push(["width","100%"]),n.push(["aspect-ratio",i?`${i}`:void 0]),n.push(["height",pixelate(e)])),"responsive"===r&&(n.push(["width","100%"]),n.push(["height","auto"]),n.push(["aspect-ratio",i?`${i}`:void 0])),"contained"===r&&(n.push(["max-width","100%"]),n.push(["max-height","100%"]),n.push(["object-fit","contain"]),n.push(["aspect-ratio",i?`${i}`:void 0])),"cover"===r&&(n.push(["max-width","100%"]),n.push(["max-height","100%"]));const p=Object.fromEntries(n.filter((([,t])=>t)));return Object.entries(p).map((([t,e])=>`${t}: ${e};`)).join(" ")},getBreakpoints=({width:t,breakpoints:e,layout:i})=>{if("fullWidth"===i||"cover"===i||"responsive"===i||"contained"===i)return e||config.deviceSizes;if(!t)return[];const r=2*t;return"fixed"===i?[t,r]:"constrained"===i?[t,r,...(e||config.deviceSizes).filter((t=>t<r))]:[]},astroAsseetsOptimizer=async(t,e,i,r)=>t?Promise.all(e.map((async e=>({src:(await getImage({src:t,width:e,inferSize:!0})).src,width:e})))):[],isUnpicCompatible=t=>void 0!==parseUrl(t),unpicOptimizer=async(t,e,i,r)=>{if(!t||"string"!=typeof t)return[];const s=parseUrl(t);return s?Promise.all(e.map((async e=>{const o=transformUrl({url:t,width:e,height:i&&r?computeHeight(e,i/r):r,cdn:s.cdn})||t;return{src:String(o),width:e}}))):[]};async function getImagesOptimized(t,{src:e,width:i,height:r,sizes:s,aspectRatio:o,widths:a,layout:n="constrained",style:p="",...c},h=()=>Promise.resolve([])){"string"!=typeof t&&(i||=Number(t.width)||void 0,r||="number"==typeof i?computeHeight(i,t.width/t.height):void 0),i=i&&Number(i)||void 0,r=r&&Number(r)||void 0,a||=config.deviceSizes,s||=getSizes(Number(i)||void 0,n),(o=parseAspectRatio(o))?i?r||(r=i/o):r?i=Number(r*o):"fullWidth"!==n&&(console.error("When aspectRatio is set, either width or height must also be set"),console.error("Image",t)):i&&r?o=i/r:"fullWidth"!==n&&(console.error("Either aspectRatio or both width and height must be set"),console.error("Image",t));let d=getBreakpoints({width:i,breakpoints:a,layout:n});d=[...new Set(d)].sort(((t,e)=>t-e));const m=(await h(t,d,Number(i)||void 0,Number(r)||void 0)).map((({src:t,width:e})=>`${t} ${e}w`)).join(", ");return{src:"string"==typeof t?t:t.src,attributes:{width:i,height:r,srcset:m||void 0,sizes:s,style:`${getStyle({width:i,height:r,aspectRatio:o,layout:n})}${p??""}`,...c}}}const $$Astro=createAstro("https://tinhmenhdo.github.io"),$$Image=createComponent((async(t,e,i)=>{const r=t.createAstro($$Astro,e,i);r.self=$$Image;const s=r.props;if(void 0===s.alt||null===s.alt)throw new Error;"string"==typeof s.width&&(s.width=parseInt(s.width)),"string"==typeof s.height&&(s.height=parseInt(s.height)),s.loading||(s.loading="lazy"),s.decoding||(s.decoding="async");const o=await findImage(s.src);let a;return"string"==typeof o?a=(o.startsWith("http://")||o.startsWith("https://"))&&isUnpicCompatible(o)?await getImagesOptimized(o,s,unpicOptimizer):{src:o,attributes:{...s,src:void 0}}:o&&(a=await getImagesOptimized(o,s,astroAsseetsOptimizer)),renderTemplate`${a?renderTemplate`${maybeRenderHead()}<img${addAttribute(a.src,"src")} crossorigin="anonymous" referrerpolicy="no-referrer"${spreadAttributes(a.attributes)}>`:renderTemplate`${renderComponent(t,"Fragment",Fragment,{})}`}`}),"/root/code/tmd_astro/src/components/common/Image.astro",void 0);export{$$Image as $};