import{g as getImage}from"./BJadZLo-.js";const load=async()=>{let s;try{s=Object.assign({"/src/assets/images/144x114.png":()=>import("./CibmBVvZ.js"),"/src/assets/images/192x192.png":()=>import("./BfDla_1Q.js"),"/src/assets/images/196x196.png":()=>import("./BXniYmj_.js"),"/src/assets/images/72x72.png":()=>import("./CJOtu1-O.js"),"/src/assets/images/TinhMenhDo-GPT.png":()=>import("./BZYqTV2B.js"),"/src/assets/images/YinYang.webp":()=>import("./VU7nzx10.js"),"/src/assets/images/am-duong.png":()=>import("./DWsEwPBK.js"),"/src/assets/images/app-store.png":()=>import("./BEVA1S30.js"),"/src/assets/images/architecture.png":()=>import("./DQ_hE_ah.js"),"/src/assets/images/arrows.png":()=>import("./DALptN5e.js"),"/src/assets/images/bg.jpg":()=>import("./CLki7krq.js"),"/src/assets/images/birthday-cake.png":()=>import("./Dr_ybAHm.js"),"/src/assets/images/brain.png":()=>import("./C9kPyu-J.js"),"/src/assets/images/calendar.png":()=>import("./koUdI2le.js"),"/src/assets/images/curve-arrow.png":()=>import("./D9U-fMWn.js"),"/src/assets/images/default.png":()=>import("./CqJTg6nm.js"),"/src/assets/images/default.webp":()=>import("./FDVLTqzN.js"),"/src/assets/images/diaban.png":()=>import("./DZWy4dlq.js"),"/src/assets/images/earth.png":()=>import("./BxmfDBAi.js"),"/src/assets/images/fav.png":()=>import("./BReT21R_.js"),"/src/assets/images/google-play.png":()=>import("./DIkfyrvY.js"),"/src/assets/images/hero-image.png":()=>import("./CCIzJPSB.js"),"/src/assets/images/icon.png":()=>import("./D_yZCQ8s.js"),"/src/assets/images/logo.png":()=>import("./DhDgdkQ2.js"),"/src/assets/images/man.png":()=>import("./BI5JWqom.js"),"/src/assets/images/scale.png":()=>import("./H1UZfWur.js"),"/src/assets/images/star.png":()=>import("./CtoWwvt2.js"),"/src/assets/images/universe.png":()=>import("./_Ji3z0Cb.js"),"/src/assets/images/view.png":()=>import("./Bz1Cvnkg.js"),"/src/assets/images/woman.png":()=>import("./BPg8VygF.js"),"/src/assets/images/yinyang.png":()=>import("./xt8v1Sq2.js"),"/src/assets/images/yinyang2.webp":()=>import("./Dj-7lzY_.js")})}catch(s){}return s};let _images;const fetchLocalImages=async()=>(_images=_images||await load(),_images),findImage=async s=>{if("string"!=typeof s)return s;if(s.startsWith("http://")||s.startsWith("https://")||s.startsWith("/"))return s;if(!s.startsWith("~/assets/images"))return s;const t=await fetchLocalImages(),a=s.replace("~/","/src/");return t&&"function"==typeof t[a]?(await t[a]()).default:null},adaptOpenGraphImages=async(s={},t=new URL(""))=>{if(!s?.images?.length)return s;const a=s.images,e=await Promise.all(a.map((async s=>{if(s?.url){const t=await findImage(s.url);if(!t)return{url:""};const a=await getImage({src:t,alt:"Placeholder alt",width:s?.width||1200,height:s?.height||626});return"object"==typeof a?{url:"src"in a&&"string"==typeof a.src?a.src:"pepe",width:"width"in a&&"number"==typeof a.width?a.width:void 0,height:"height"in a&&"number"==typeof a.height?a.height:void 0}:{url:""}}return{url:""}})));return{...s,...e?{images:e}:{}}};export{adaptOpenGraphImages as a,findImage as f};